// Для решения этой задачи можно использовать динамическое программирование.Создать
//     матрицу размером N×N,
//     где элемент[i][j] будет содержать максимальное количество зелий,
//     которые можно изготовить из ингредиентов A и B,
//     имея i единиц ингредиента A и j единиц ингредиента B.Заполнять
//         матрицу следующим образом :

//     Если i = 0 или j = 0,
//          то элемент[i][j] равен 0. Если i > 0 и j > 0,
//          то элемент[i][j] равен максимуму из следующих значений
//     :
// [i - 1][j] + 1(если зелье i + 2 содержит ингредиент A)
// [i][j - 1] + 1(если зелье i + 2 содержит ингредиент B)
// [i - 1][j - 1] + 1(если зелье i + 2 содержит ингредиенты A и B)

//           Таким образом,
//          элемент[i][j] будет содержать максимальное количество зелий,
//          которые можно изготовить из ингредиентов A и B,
//          имея i единиц ингредиента A и j единиц ингредиента B.После заполнения
//          матрицы,
//          элемент[N - 1][N - 1] будет содержать максимальное количество зелий,
//          которые можно изготовить из ингредиентов A и B,
//          имея все ингредиенты A и B.Таким образом,
//          для ответа на вопрос Тирании о возможности изготовления зелья номер S,
//          нужно проверить значение элемента[N - 1][N - 1] и сравнить его с
//     количеством ингредиентов A и B,
//          которые у Тирании.Если значение элемента[N - 1][N - 1] больше или равно
//          количеству ингредиентов A и B,
//          у Тирании, то она может изготовить зелье номер S.